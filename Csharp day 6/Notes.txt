Virtual 
-----------
C# virtual method is a method that can be redefined in derived classes. In C#, a virtual method has an implementation in a base class as well as derived the class. It is used when a method's basic functionality is the same but sometimes more functionality is needed in the derived class. A virtual method is created in the base class that can be overriden in the derived class. We create a virtual method in the base class using the virtual keyword and that method is overriden in the derived class using the override keyword.

Exception Handling
------------------
Exception -- Error 

keywords:
try{}
catch(){}
finally{}
throw 

Syntax:
// Try block
try
{
 // Program instructions Block.
}

// Catch block
catch(ExceptionType e)
{
 // Instructions to handle exception.
}

// Finally block
finally
{
 // Instructions to clean up.
}
---------------------------------------------
Const and Readonly
------------------

Const:stable  :compile time constant


Generics:

Generics introduce the concept of type parameters to .NET, which make it possible to design classes and methods that defer the specification of one or more types until the class or method is declared and instantiated by client code. For example, by using a generic type parameter T  <T>
o Need of Generics
o Generic Classes
o Generic Methods
o Generic Constraints 


--------------------------------------------------
COllections

 --Collection of Information

           Non-generic collection classes(Collection)                       Generic Collection
             ---------------------------				-----------------------
Namespace:System.Collections				       System.Collections.Generic

		ArrayList 							List
		Hashtable							Dictionary	
		SortedList							SortedList
		Stack[FILO]:Push,pop						stack
		Queue[FIFO]:Enqueue,Dequeue					Queue
		
                    

Drawback:
   --Unnecessay boxing and unboxing 
   --Type safe



Assemblies:(Set of codes)

assemble is the detail of the application

exe(executable ) or dll (dynamic link library)

dll -only logic ()

two types of assemblies

 Private assembly --Local 

 shared Asssembly-- Global  assembly --stored in GAC(Global Assembly cache) folder


























